\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Player and Stage}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Occupancy Grid Mapping}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Representing the world}{1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}C++ code for dynamically resizing the grid when a point (x,y) falls outside the current grid's size}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Sensing the world}{2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}C++ code used for calculating the new point given the current position, angle and range}{2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}C++ code used to make control the robot to reactively wander through the environment}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Console output from a typical simulation.}}{4}}
\newlabel{fig:example-run}{{1}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Interpreting Results}{4}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}C++ code used to calculate the threshold value for the grid}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Heat Map showing the certainty that each cell in the grid is a wall. Left plot shows before the threshold is applied. Right plot shows after the threshold has been applied. Notice how the incorrect wall square in the nook is removed in the right hand plot.}}{5}}
\newlabel{fig:final-example}{{2}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Issues and Potential Improvements}{5}}
\newlabel{sec:issues}{{2.4}{5}}
